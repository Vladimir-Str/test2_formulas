@page
@model test2_formulas.Pages.Formula.IndexModel

@{
    ViewData["Title"] = "Выражения";
}

<h1>Выражения</h1>

<p>
    <a asp-page="Create"
        class="btn btn-primary">
        Добавить выражение
    </a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Отфильтровать по пользователю:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Фильтр" class="btn btn-primary" /> |
            <a asp-page="./Index">Очистить фильтр</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Exprs[0].Expression)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exprs[0].Result)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exprs[0].TimeSpan)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exprs[0].Cost)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Exprs[0].User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Exprs)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Expression)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Result)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimeSpan)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.User.UserName)
                </td>
                <td>
                    <a asp-page="./Delete" asp-route-id="@item.ExprID">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Exprs.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Exprs.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Exprs.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Пред.
</a>
<a asp-page="./Index"
   asp-route-pageIndex="@(Model.Exprs.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    След.
</a>